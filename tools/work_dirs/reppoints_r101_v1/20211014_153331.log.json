{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Jun  4 2021, 14:48:32) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-11.1\nNVCC: Build cuda_11.1.TC455_06.29069683_0\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.5.3\nMMCV: 1.3.9\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.17.0+", "config": "norm_cfg = dict(type='GN', num_groups=32, requires_grad=True)\nmodel = dict(\n    type='RepPointsDetector',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True),\n        num_outs=5),\n    bbox_head=dict(\n        type='RepPointsHead',\n        num_classes=1,\n        in_channels=256,\n        feat_channels=256,\n        point_feat_channels=256,\n        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True),\n        stacked_convs=3,\n        num_points=9,\n        gradient_mul=0.1,\n        point_strides=[8, 16, 32, 64, 128],\n        point_base_scale=4,\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox_init=dict(type='SmoothL1Loss', beta=0.11, loss_weight=0.5),\n        loss_bbox_refine=dict(type='SmoothL1Loss', beta=0.11, loss_weight=1.0),\n        transform_method='moment'),\n    train_cfg=dict(\n        init=dict(\n            assigner=dict(type='PointAssigner', scale=4, pos_num=1),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        refine=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.4,\n                min_pos_iou=0,\n                ignore_iof_thr=-1),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'RefCrowdDataset'\ndata_root = '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=[\n            'img', 'gt_bboxes', 'gt_labels', 'refer_labels', 'att_labels',\n            'att_label_weights'\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img', 'refer_labels'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='RefCrowdDataset',\n        ann_file=[\n            '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/annotations/1011_json/refcrowdhuman2021_qhq_train_1011_h5id.json'\n        ],\n        img_prefix=\n        '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/crowdhuman2021/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=[\n                    'img', 'gt_bboxes', 'gt_labels', 'refer_labels',\n                    'att_labels', 'att_label_weights'\n                ])\n        ]),\n    val=dict(\n        type='RefCrowdDataset',\n        ann_file=[\n            '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/annotations/1011_json/refcrowdhuman2021_qhq_val_1011_h5id.json'\n        ],\n        img_prefix=\n        '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/crowdhuman2021/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img', 'refer_labels'])\n                ])\n        ]),\n    test=dict(\n        type='RefCrowdDataset',\n        ann_file=\n        '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/annotations/1011_json/refcrowdhuman2021_qhq_val_1011_h5id.json',\n        img_prefix=\n        '/data1/QiuHeqian/refcrowdhuman_qhq/refcrowd_dataset/crowdhuman2021/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img', 'refer_labels'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='Top1Acc')\noptimizer = dict(\n    type='SGD',\n    lr=0.002,\n    momentum=0.9,\n    weight_decay=0.0001,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            dynamic_fcs=dict(lr_mult=10.0, decay_mult=1.0),\n            rnn_encoder=dict(lr_mult=10.0, decay_mult=1.0),\n            contra=dict(lr_mult=10.0, decay_mult=1.0),\n            lang=dict(lr_mult=10.0, decay_mult=1.0),\n            vis=dict(lr_mult=10.0, decay_mult=1.0),\n            word=dict(lr_mult=10.0, decay_mult=1.0))))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nresume_from = None\nworkflow = [('train', 1)]\nload_from = '/data1/QiuHeqian/refcrowdhuman_qhq/mmdetection-refcrowd-cvpr/pretrained_models/reppoints_moment_r101_fpn_gn-neck+head_2x_coco_20200329-4fbc7310.pth'\nwork_dir = './work_dirs/reppoints_r101_v1'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "reppoints_r101_v1.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0002, "memory": 5363, "data_time": 0.11091, "loss_cls": 0.9928, "loss_pts_init": 0.04038, "loss_pts_refine": 0.16303, "loss": 1.19621, "time": 0.90371}
